Traceback (most recent call last):
  File "/home/conda/users/envs/users-pangeofu/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/conda/users/envs/users-pangeofu/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/conda/users/envs/users-pangeofu/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/conda/users/envs/users-pangeofu/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/home/conda/users/envs/users-pangeofu/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/conda/users/envs/users-pangeofu/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/conda/users/envs/users-pangeofu/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/conda/users/envs/users-pangeofu/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------

try:
    from dask_gateway import Gateway
except ImportError:
    logging.error("Unable to import Dask Gateway.  Are you running in a cloud compute environment?\n")
    raise
os.environ['DASK_DISTRIBUTED__SCHEDULER__WORKER_SATURATION'] = "1.0"

gateway = Gateway()
_options = gateway.cluster_options()
_options.conda_environment='users/users-pangeo'  ##<< this is the conda environment we use on nebari.
_options.profile = 'Medium Worker'
_env_to_add={}
aws_env_vars=['AWS_ACCESS_KEY_ID',
              'AWS_SECRET_ACCESS_KEY',
              'AWS_SESSION_TOKEN',
              'AWS_DEFAULT_REGION',
              'AWS_S3_ENDPOINT']
for _e in aws_env_vars:
    if _e in os.environ:
        _env_to_add[_e] = os.environ[_e]
_options.environment_vars = _env_to_add    
cluster = gateway.new_cluster(_options)          ##<< create cluster via the dask gateway
cluster.adapt(minimum=10, maximum=30)             ##<< Sets scaling parameters. 
client = cluster.get_client()

print("The 'cluster' object can be used to adjust cluster behavior.  i.e. 'cluster.adapt(minimum=10)'")
print("The 'client' object can be used to directly interact with the cluster.  i.e. 'client.submit(func)' ")
print(f"The link to view the client dashboard is:\n>  {client.dashboard_link}")
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[1], line 6[0m
[1;32m      4[0m     logging[38;5;241m.[39merror([38;5;124m"[39m[38;5;124mUnable to import Dask Gateway.  Are you running in a cloud compute environment?[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m)
[1;32m      5[0m     [38;5;28;01mraise[39;00m
[0;32m----> 6[0m [43mos[49m[38;5;241m.[39menviron[[38;5;124m'[39m[38;5;124mDASK_DISTRIBUTED__SCHEDULER__WORKER_SATURATION[39m[38;5;124m'[39m] [38;5;241m=[39m [38;5;124m"[39m[38;5;124m1.0[39m[38;5;124m"[39m
[1;32m      8[0m gateway [38;5;241m=[39m Gateway()
[1;32m      9[0m _options [38;5;241m=[39m gateway[38;5;241m.[39mcluster_options()

[0;31mNameError[0m: name 'os' is not defined
NameError: name 'os' is not defined

